{
  "components": {
    "1": {
      "id": "1",
      "type": "lab.html.Form",
      "content": "<!-- Шапка --> \n<header class=\"header-footer-style\">\n    1/20 шаг набора • Тренировочный этап <br>\n</header>\n\n\n<main class=\"main-layout\">\n<!-- Элементы вывода -->\n<div class = \"horizontal-section\">\n\n\n  <!-- График (тут только часть, остальное в Scripts) --> \n  <div id = \"chart-card\" class=\"card output-color horizontal-centered\">\n    <div id = \"chart\"></div>\n  </div>\n\n\n  <!-- Уровень производства + Предварительный выбор -->\n  <div id = \"info-section-col\">\n    <!-- Уровень производства --> \n    <div id \"prod-level\" class = \"card output-color text-lefted\">\n      <div id = \"prod-level-headline\" class = \"headline\">Уровень производства</div>\n      <div class = \"fifthteen_px\"\"> \n        <span class = \"medium_weight\">Текущий уровень:</span> \n        <span class = \"dark-yellow\"> 6.000 (+2.000 до цели) </span>\n      </div>\n      <div id = \"target-level-headline\" class = \"fifthteen_px text-lefted\"> \n        <span class = \"medium_weight\"> Цель:</span> \n        8.000 – 10.000\n      </div>\n    </div>\n\n  </div>\n</div>\n\n\n<!-- Элементы ввода --> \n<div class = \"horizontal-section\">\n  <!-- Выбор количества рабочих (тут только часть, логика изменения в Scripts) --> \n  <div class = \"card input-color vertical-centered\">\n    <p class = \"headline\">Выберите количество рабочих</p>\n    <div class = \"horizontal-centered\">\n        <button id = \"-\" class = \"work-num-element button nineteen_px\">-</button>\n        <span id=\"amount_of_workers\" class=\"work-num-element twenty-four_px\"> 600 </span>\n        <button id=\"+\" class=\"work-num-element button nineteen_px\">+</button>\n    </div>\n  </div>\n\n\n<!-- Уверенность --> \n  <div class=\"card input-color vertical-lefted\">\n    <span \n      id = \"confidence-headline\" \n      class = \"headline\"> Оцените уверенность </span>\n    <div id = \"confidence-block\">\n      <form id = \"confidence_form\" class = \"fifthteen_px\"> \n        <input style = \"font-size: \"24px\"\"\n          type = \"radio\" \n          id = \"confidence_t\"\n          name = \"confidence\" \n          value = \"1\"\n          required> Скорее уверен <br>\n        <input style = \"font-size: \"24px\"\"\n          type = \"radio\" \n          id = \"confidence_f\"\n          name = \"confidence\" \n          value = \"0\"\n          required> Скорее не уверен\n      </form> \n    </div> \n  </div>\n</div>\n\n</main>\n\n\n<!-- Чердак --> \n<footer class=\"header-footer-style\">\n  Нажмите <kbd class=\"fifthteen_px\">enter</kbd>, чтобы сохранить ответ и перейти дальше\n\n    <!-- Кнопка для сабмита --> \n    <button \n        id = \"submit_button\" \n        style = \"display: none\" \n        type = \"submit\" \n        form = \"confidence_form\">\n    </button>\n    \n</footer>\n\n\n\n\n",
      "scrollTop": true,
      "files": [],
      "responses": [
        {
          "label": "",
          "event": "",
          "target": "",
          "filter": ""
        }
      ],
      "parameters": [
        {
          "name": "",
          "value": "",
          "type": "string"
        }
      ],
      "messageHandlers": [
        {
          "title": "",
          "message": "run",
          "code": "// Данные для графика\nvar preapred_data = {\"values\": [\n      {'Сделанный выбор': 600, 'Уровень производства': 7000, 'Шаг': 0},\n      {'Сделанный выбор': 500, 'Уровень производства': 4000, 'Шаг': 1},\n      {'Сделанный выбор': 700, 'Уровень производства': 5000, 'Шаг': 2},\n      {'Сделанный выбор': 300, 'Уровень производства': 9000, 'Шаг': 3},\n      {'Сделанный выбор': 600, 'Уровень производства': 6000, 'Шаг': 4}\n    ]}\n\n\n// Конфигурация графика\nvar spec = {\n  $schema: 'https://vega.github.io/schema/vega-lite/v3.json',\n  data: preapred_data,\n  transform: [\n    {'calculate': '7940', \"as\": \"downline\"}, \n    {'calculate': '9980', \"as\": \"upline\"}],\n  zero_title: 2000,\n  width: 400,\n  height: 140,\n  title: {text: 'Производственный график', fontSize: 16, dy: -12},\n  layer: [\n\n   // Прямоугольник, выделяющий целевой уровень производства         \n   {mark: \"rect\",\n    encoding: {\n        \"x\":{ \"value\": 0 },\n        \"x2\":{ \"value\": 400 },\n        \"y\":{ \"field\": \"upline\" },\n        \"y2\":{ \"field\": \"downline\" } ,\n        \"fill\":{ \"value\": \"green\" },\n        \"stroke\":{ \"value\": \"green\" },\n        \"strokeWidth\":{ \"value\": 0.1 },\n        \"fillOpacity\":{ \"value\": 0.1 },\n        \"opacity\":{ \"value\": 0.1 },\n        \"tooltip\": \n          {\"value\": \"Цель (8.000 – 10.000)\"}}}, \n\n   // Линия, обозначающая нижнюю границу целевого уровня производства\n   {mark: \"rule\",\n    labels: false,\n    encoding: {\n        y: { \"field\": \"downline\", title: \"Уровень производства\"},\n        size: { \"value\": 1.5 },\n        tooltip: { \"value\": null },\n        color: { \"value\": \"green\" }}},\n\n   // Линия, обозначающая верхнюю границу целевого уровня производства\n   {mark: \"rule\",\n    labels: false,\n    encoding: {\n        y: { \"field\": \"upline\", title: \"Уровень производства\"},\n        size: { \"value\": 1.5 },\n        tooltip: { \"value\": null },\n        color: { \"value\": \"green\" }}},\n      \n   // График изменения уровня производства     \n   {mark: {\"type\": \"line\", \"point\": {\"size\": 60}},\n    encoding: {\n      x: {\n        field: 'Шаг', \n        type: 'quantitative', \n        scale: {domain: [0, 20]},\n        axis: {titleFontSize: 14, labelFontSize: 12, titlePadding: 12}},\n      y: {\n        field: 'Уровень производства', \n        type: 'quantitative', \n        scale: {domain: [0, 12000]},\n        axis: {\n          titleFontSize: 14, \n          labelFontSize: 12,  \n          titlePadding: 12,    \n          zindex: 0}},\n      color: {\n        condition: {\n          \"test\": \"datum['Шаг'] > 3\", \n          \"value\": \"#DC8A0E\"}, \n          \"value\": \"#315399\"},\n      tooltip: [{\n        \"field\": \"Сделанный выбор\", \n        \"type\": \"quantitative\",\n        \"title\": \"Выбор\"}]}}]\n};\n\n\n// Построение графика\nvegaEmbed('#chart', spec, {\"actions\": false}).then(function(res) {\n  res.view.change('table', changeSet).run();\n});\n\n\n// Функция, срабатывающая при достижении максимального/минимального количества рабочих\nfunction showLimit() {\n  amount_of_workers.classList.add(\"workers_amount_animation\")\n  setTimeout(function() { amount_of_workers.classList.remove(\"workers_amount_animation\") }, 600);\n}\n\n// Функция, для изменения значения поля с количеством рабочих\nfunction myFunction(plus) {\n  var amount_of_workers = document.getElementById(\"amount_of_workers\");\n  var number = parseInt(amount_of_workers.innerHTML);\n\n  if (plus === true ) {\n    if (number < 1200) {\n      number = number + 100\n    } else { \n        showLimit()\n     }} \n    \n  else {\n    if (number > 100) {\n      number = number - 100} else { \n        showLimit()\n    }}\n  \n  amount_of_workers.firstChild.nodeValue = number;\n}\n\n// Привязка функции к нажатию на кнопку \"+\"\nconst pl = document.getElementById(\"+\");\npl.addEventListener(\"click\", () => { myFunction(plus = true); });\n\n\n// Привязка функции к нажатию на кнопку \"-\"\nconst ml = document.getElementById(\"-\");\nml.addEventListener(\"click\", () => { myFunction(plus = false); });\n\n\n// Привязка сабмита к пробелу\nenterPress = function(event) {\n    if (event.code === 'Enter') {\n      var submit_button = document.getElementById(\"submit_button\");\n      submit_button.click()\n  }\n}\n\ndocument.addEventListener('keypress', enterPress, true)\n\n\n\n\n"
        },
        {
          "title": "",
          "message": "end",
          "code": "document.removeEventListener('keypress', enterPress, true)"
        }
      ],
      "title": "[1C] Factory interface, individual",
      "_tab": "Scripts"
    },
    "2": {
      "id": "2",
      "type": "lab.html.Screen",
      "files": [],
      "responses": [],
      "parameters": [
        {
          "name": "",
          "value": "",
          "type": "string"
        }
      ],
      "messageHandlers": [
        {
          "title": "",
          "message": "run",
          "code": "// Таймер\nvar secondsPlaceholder = document.getElementById(\"time\");\nvar totalSeconds = 10;\n\ntimer = setInterval(setTime, 1000);\n\nfunction setTime() {\n  --totalSeconds;\n  if (totalSeconds > -1) { secondsPlaceholder.innerHTML = totalSeconds}\n  if (totalSeconds < 6) {\n   var time_block = document.getElementById(\"time-block\");\n   time_block.classList.add(\"dark-red\");\n  }\n}"
        },
        {
          "title": "",
          "message": "end",
          "code": "clearInterval(timer);"
        }
      ],
      "title": "[D] Discussion",
      "content": "<!-- Шапка --> \n<header class=\"header-footer-style\">\n    Обсуждение • 5/20 шаг набора • Этап с напарником <br>\n    <div id=\"time-block\"><b>Оставшееся время:</b> <span id=\"time\"> 10 </span> секунд </div>\n</header>\n\n<main class=\"main-layout content-vertical-center\">\n\n<!-- Уровень производства --> \n<div id = \"discussion-block\" class = \"card text-centered\">\n      <div id = \"prod-level-headline-dis\" class = \"headline\">Период обсуждения</div>\n      <div id = \"task-headline\" class = \"fifthteen_px\"> \n        В данный момент вам необходимо обсудить задание с напарником \n      </div>\n</div>\n\n <!-- Уровень производства + Предварительный выбор -->\n  <div id = \"info-section-row\">\n    <!-- Уровень производства --> \n    <div id \"prod-level\" class = \"card output-color text-lefted\" style=\"height: fit-content\">\n      <div id = \"prod-level-headline\" class = \"headline\">Уровень производства</div>\n      <div class = \"fifthteen_px\"\"> \n        <span class = \"medium_weight\">Текущий уровень:</span> \n        <span class = \"dark-yellow\"> 6.000 (+2.000 до цели) </span>\n      </div>\n      <div id = \"target-level-headline\" class = \"fifthteen_px text-lefted\"> \n        <span class = \"medium_weight\"> Цель:</span> \n        800-1200 \n      </div>\n    </div>\n\n    <!-- Предварительный выбор --> \n    <div class = \"card output-color vertical-centered text-lefted\">\n      <div id=\"prem-choice-headline-dis\" class = \"headline\">Предварительный выбор</div>\n      <div id=\"prem-response-dis\"> 700 </div>\n    </div>\n  </div>\n</div>\n</main>\n\n\n<!-- Чердак --> \n<footer class=\"header-footer-style\">\n  Вы перейдёте к следующему шагу по истечению времени\n</footer>\n\n",
      "_tab": "Content",
      "timeout": "10500",
      "tardy": false
    },
    "8": {
      "id": "8",
      "type": "lab.html.Screen",
      "files": [],
      "responses": [
        {
          "label": "",
          "event": "",
          "target": "",
          "filter": ""
        }
      ],
      "parameters": [
        {
          "name": "",
          "value": "",
          "type": "string"
        }
      ],
      "messageHandlers": [
        {
          "title": "",
          "message": "run",
          "code": ""
        }
      ],
      "title": "[L] Loader",
      "content": "<main class = \"content-vertical-center content-horizontal-center\">\n  <div class=\"loader\"></div>\n</main>",
      "_tab": "Behavior",
      "timeout": "500"
    },
    "9": {
      "id": "9",
      "type": "lab.html.Screen",
      "files": [],
      "responses": [
        {
          "label": "",
          "event": "",
          "target": "",
          "filter": ""
        }
      ],
      "parameters": [
        {
          "name": "",
          "value": "",
          "type": "string"
        }
      ],
      "messageHandlers": [
        {
          "title": "",
          "message": "run",
          "code": ""
        }
      ],
      "title": "[L] Loader",
      "content": "<main class = \"content-vertical-center content-horizontal-center\">\n  <div class=\"loader\"></div>\n</main>",
      "_tab": "Content",
      "timeout": "500"
    },
    "10": {
      "id": "10",
      "type": "lab.html.Screen",
      "files": [],
      "responses": [
        {
          "label": "",
          "event": "",
          "target": "",
          "filter": ""
        }
      ],
      "parameters": [
        {
          "name": "",
          "value": "",
          "type": "string"
        }
      ],
      "messageHandlers": [
        {
          "title": "",
          "message": "run",
          "code": ""
        }
      ],
      "title": "[L] Loader",
      "content": "<main class = \"content-vertical-center content-horizontal-center\">\n  <div class=\"loader\"></div>\n</main>",
      "_tab": "Scripts",
      "timeout": "500"
    },
    "12": {
      "id": "12",
      "type": "lab.html.Screen",
      "files": [],
      "responses": [
        {
          "label": "",
          "event": "",
          "target": "",
          "filter": ""
        }
      ],
      "parameters": [
        {
          "name": "",
          "value": "",
          "type": "string"
        }
      ],
      "messageHandlers": [
        {
          "title": "",
          "message": "run",
          "code": ""
        }
      ],
      "title": "[L] Loader",
      "content": "<main class = \"content-vertical-center content-horizontal-center\">\n  <div class=\"loader\"></div>\n</main>",
      "_tab": "Content",
      "timeout": "500"
    },
    "18": {
      "id": "18",
      "type": "lab.html.Form",
      "content": "<!-- Шапка --> \n<header class=\"header-footer-style\">\n    Предварительный выбор • 6/20 шаг набора • Этап с напарником <br>\n    <div id=\"time-block\"><b>Оставшееся время:</b> <span id=\"time\"> 20 </span> секунд </div>\n</header>\n\n\n<main class=\"main-layout\">\n<!-- Элементы вывода -->\n<div class = \"horizontal-section\">\n\n\n  <!-- График (тут только часть, остальное в Scripts) --> \n  <div id = \"chart-card\" class=\"card output-color horizontal-centered\">\n    <div id = \"chart\"></div>\n  </div>\n\n\n  <!-- Уровень производства + Предварительный выбор -->\n  <div id = \"info-section-col\">\n    <!-- Уровень производства --> \n    <div id \"prod-level\" class = \"card output-color text-lefted\">\n      <div id = \"prod-level-headline\" class = \"headline\">Уровень производства</div>\n      <div class = \"fifthteen_px\"\"> \n        <span class = \"medium_weight\">Текущий уровень:</span> \n        <span class = \"dark-green\"> 9.000 (отвечает цели) </span>\n      </div>\n      <div id = \"target-level-headline\" class = \"fifthteen_px text-lefted\"> \n        <span class = \"medium_weight\"> Цель:</span> \n        8.000 – 10.000\n      </div>\n    </div>\n\n  </div>\n</div>\n\n\n<!-- Элементы ввода --> \n<div class = \"horizontal-section\">\n  <!-- Выбор количества рабочих (тут только часть, логика изменения в Scripts) --> \n  <div class = \"card input-color vertical-centered\">\n    <p class = \"headline\">Выберите количество рабочих</p>\n    <div class = \"horizontal-centered\">\n        <button id = \"-\" class = \"work-num-element button nineteen_px\">-</button>\n        <span id=\"amount_of_workers\" class=\"work-num-element twenty-four_px\"> 600 </span>\n        <button id=\"+\" class=\"work-num-element button nineteen_px\">+</button>\n    </div>\n  </div>\n\n\n<!-- Уверенность --> \n  <div id=\"confidence_block\" class=\"card input-color vertical-lefted\">\n    <span \n      id = \"confidence-headline\" \n      class = \"headline\"> Оцените уверенность </span>\n    <div id = \"confidence-block\">\n      <form id = \"confidence_form\" class = \"fifthteen_px\"> \n        <input style = \"\n          font-size: \"24px\"\n          type = \"radio\" \n          name = \"confidence\" \n          id = \"confidence_t\"\n          value = \"1\"> Скорее уверен <br>\n        <input style = \"\n          font-size: \"24px\" \n          type = \"radio\" \n          name = \"confidence\" \n          id = \"confidence_f\"\n          value = \"0\"> Скорее не уверен\n      </form> \n    </div> \n  </div>\n</div>\n\n</main>\n\n\n<!-- Чердак --> \n<footer class=\"header-footer-style\">\n  Вы перейдёте к следующему шагу по истечению времени\n\n    <!-- Кнопка для сабмита --> \n    <button \n        id = \"submit_button\" \n        style = \"display: none\" \n        type = \"submit\" \n        form = \"confidence_form\">\n    </button>\n    \n</footer>\n\n",
      "scrollTop": true,
      "files": [],
      "responses": [],
      "parameters": [
        {
          "name": "",
          "value": "",
          "type": "string"
        }
      ],
      "messageHandlers": [
        {
          "title": "",
          "message": "run",
          "code": "// Таймер\nvar secondsPlaceholder = document.getElementById(\"time\");\nvar totalSeconds = 20;\n\ntimer = setInterval(setTime, 1000);\n\nfunction setTime() {\n  --totalSeconds;\n\n  // Отображение оставшегося времени в интерфейсе\n  if (totalSeconds > -1) { secondsPlaceholder.innerHTML = totalSeconds}\n\n  // Отправка формы уверенности\n  if (totalSeconds == 0) {\n    if (!document.getElementById('confidence_t').checked && !document.getElementById('confidence_f').checked) {  \n          study.state.confidence = \"NA\"\n      } else {\n          var submit_button = document.getElementById(\"submit_button\");\n          submit_button.click()\n      }\n  }\n  \n  // Подсветка формы уверенности, если в оставшиеся 5 секунд выбор не был сделан\n  if (totalSeconds < 6) {\n\n    var time_block = document.getElementById(\"time-block\");\n    time_block.classList.add(\"dark-red\");\n    var conf_block = document.getElementById(\"confidence_block\");\n    \n    if (!document.getElementById('confidence_t').checked && !document.getElementById('confidence_f').checked) {  \n          conf_block.classList.add(\"red-state\");\n    } else {conf_block.classList.remove(\"red-state\") }\n\n  }\n}\n\n\n// Данные для графика\nvar preapred_data = {\"values\": [\n      {'Сделанный выбор': 600, 'Уровень производства': 7000, 'Шаг': 0},\n      {'Сделанный выбор': 500, 'Уровень производства': 4000, 'Шаг': 1},\n      {'Сделанный выбор': 700, 'Уровень производства': 5000, 'Шаг': 2},\n      {'Сделанный выбор': 300, 'Уровень производства': 9000, 'Шаг': 3},\n      {'Сделанный выбор': 600, 'Уровень производства': 6000, 'Шаг': 4},\n      {'Сделанный выбор': 700, 'Уровень производства': 9000, 'Шаг': 5}\n    ]}\n\n// Конфигурация графика\nvar spec = {\n  $schema: 'https://vega.github.io/schema/vega-lite/v3.json',\n  data: preapred_data,\n  transform: [\n    {'calculate': '7940', \"as\": \"downline\"}, \n    {'calculate': '9980', \"as\": \"upline\"}],\n  zero_title: 2000,\n  width: 400,\n  height: 140,\n  title: {text: 'Производственный график', fontSize: 16, dy: -12},\n  layer: [\n\n   // Прямоугольник, выделяющий целевой уровень производства         \n   {mark: \"rect\",\n    encoding: {\n        \"x\":{ \"value\": 0 },\n        \"x2\":{ \"value\": 400 },\n        \"y\":{ \"field\": \"upline\" },\n        \"y2\":{ \"field\": \"downline\" } ,\n        \"fill\":{ \"value\": \"green\" },\n        \"stroke\":{ \"value\": \"green\" },\n        \"strokeWidth\":{ \"value\": 1 },\n        \"fillOpacity\":{ \"value\": 0.1 },\n        \"opacity\":{ \"value\": 0.1 },\n        \"tooltip\": \n          {\"value\": \"Цель (8.000 – 10.000)\"}}}, \n\n   // Линия, обозначающая нижнюю границу целевого уровня производства\n   {mark: \"rule\",\n    labels: false,\n    encoding: {\n        y: { \"field\": \"downline\", title: \"Уровень производства\"},\n        size: { \"value\": 1.5 },\n        tooltip: { \"value\": null },\n        color: { \"value\": \"green\" }}},\n\n   // Линия, обозначающая верхнюю границу целевого уровня производства\n   {mark: \"rule\",\n    labels: false,\n    encoding: {\n        y: { \"field\": \"upline\", title: \"Уровень производства\"},\n        size: { \"value\": 1.5 },\n        tooltip: { \"value\": null },\n        color: { \"value\": \"green\" }}},\n      \n   // График изменения уровня производства     \n   {mark: {\"type\": \"line\", \"point\": {\"size\": 60}},\n    encoding: {\n      x: {\n        field: 'Шаг', \n        type: 'quantitative', \n        scale: {domain: [0, 20]},\n        axis: {titleFontSize: 14, labelFontSize: 12, titlePadding: 12}},\n      y: {\n        field: 'Уровень производства', \n        type: 'quantitative', \n        scale: {domain: [0, 12000]},\n        axis: {\n          titleFontSize: 14, \n          labelFontSize: 12,  \n          titlePadding: 12,    \n          zindex: 0}},\n      color: {\n        condition: {\n          \"test\": \"datum['Шаг'] > 4\", \n          \"value\": \"#3C8327\"}, \n          \"value\": \"#315399\"},\n      tooltip: [{\n        \"field\": \"Сделанный выбор\", \n        \"type\": \"quantitative\",\n        \"title\": \"Выбор\"}]}}]\n};\n\n\n// Построение графика\nvegaEmbed('#chart', spec, {\"actions\": false}).then(function(res) {\n  res.view.change('table', changeSet).run();\n});\n\n\n// Функция, срабатывающая при достижении максимального/минимального количества рабочих\nfunction showLimit() {\n  amount_of_workers.classList.add(\"workers_amount_animation\")\n  setTimeout(function() { amount_of_workers.classList.remove(\"workers_amount_animation\") }, 600);\n}\n\n// Функция, для изменения значения поля с количеством рабочих\nfunction myFunction(plus) {\n  var amount_of_workers = document.getElementById(\"amount_of_workers\");\n  var number = parseInt(amount_of_workers.innerHTML);\n\n  if (plus === true ) {\n    if (number < 1200) {\n      number = number + 100\n    } else { \n        showLimit()\n     }} \n    \n  else {\n    if (number > 100) {\n      number = number - 100} else { \n        showLimit()\n    }}\n  \n  amount_of_workers.firstChild.nodeValue = number;\n}\n\n\n// Привязка функции к нажатию на кнопку \"+\"\nconst pl = document.getElementById(\"+\");\npl.addEventListener(\"click\", () => { myFunction(plus = true); }, false);\n\n// Привязка функции к нажатию на кнопку \"-\"\nconst ml = document.getElementById(\"-\");\nml.addEventListener(\"click\", () => { myFunction(plus = false); }, false);\n\n\n\n"
        },
        {
          "title": "",
          "message": "end",
          "code": "clearInterval(timer);"
        }
      ],
      "title": "[3CP] Factory interface, with partner, preliminary",
      "_tab": "Content",
      "timeout": "20500"
    },
    "19": {
      "id": "19",
      "type": "lab.html.Form",
      "content": "<!-- Шапка --> \n<header class=\"header-footer-style\">\n    Предварительный выбор • 5/20 шаг набора • Этап с напарником <br>\n    <div id=\"time-block\"><b>Оставшееся время:</b> <span id=\"time\"> 20 </span> секунд </div>\n</header>\n\n\n<main class=\"main-layout\">\n<!-- Элементы вывода -->\n<div class = \"horizontal-section\">\n\n\n  <!-- График (тут только часть, остальное в Scripts) --> \n  <div id = \"chart-card\" class=\"card output-color horizontal-centered\">\n    <div id = \"chart\"></div>\n  </div>\n\n\n  <!-- Уровень производства + Предварительный выбор -->\n  <div id = \"info-section-col\">\n    <!-- Уровень производства --> \n    <div id \"prod-level\" class = \"card output-color text-lefted\">\n      <div id = \"prod-level-headline\" class = \"headline\">Уровень производства</div>\n      <div class = \"fifthteen_px\"\"> \n        <span class = \"medium_weight\">Текущий уровень:</span> \n        <span class = \"dark-yellow\"> 6.000 (+2.000 до цели) </span>\n      </div>\n      <div id = \"target-level-headline\" class = \"fifthteen_px text-lefted\"> \n        <span class = \"medium_weight\"> Цель:</span> \n        8.000 – 10.000\n      </div>\n    </div>\n\n  </div>\n</div>\n\n\n<!-- Элементы ввода --> \n<div class = \"horizontal-section\">\n  <!-- Выбор количества рабочих (тут только часть, логика изменения в Scripts) --> \n  <div class = \"card input-color vertical-centered\">\n    <p class = \"headline\">Выберите количество рабочих</p>\n    <div class = \"horizontal-centered\">\n        <button id = \"-\" class = \"work-num-element button nineteen_px\">-</button>\n        <span id=\"amount_of_workers\" class=\"work-num-element twenty-four_px\"> 600 </span>\n        <button id=\"+\" class=\"work-num-element button nineteen_px\">+</button>\n    </div>\n  </div>\n\n\n<!-- Уверенность --> \n  <div id=\"confidence_block\" class=\"card input-color vertical-lefted\">\n    <span \n      id = \"confidence-headline\" \n      class = \"headline\"> Оцените уверенность </span>\n    <div id = \"confidence-block\">\n      <form id = \"confidence_form\" class = \"fifthteen_px\"> \n        <input style = \"\n          font-size: \"24px\"\n          type = \"radio\" \n          name = \"confidence\" \n          id = \"confidence_t\"\n          value = \"1\"> Скорее уверен <br>\n        <input style = \"\n          font-size: \"24px\" \n          type = \"radio\" \n          name = \"confidence\" \n          id = \"confidence_f\"\n          value = \"0\"> Скорее не уверен\n      </form> \n    </div> \n  </div>\n</div>\n\n</main>\n\n\n<!-- Чердак --> \n<footer class=\"header-footer-style\">\n  Вы перейдёте к следующему шагу по истечению времени\n\n    <!-- Кнопка для сабмита --> \n    <button \n        id = \"submit_button\" \n        style = \"display: none\" \n        type = \"submit\" \n        form = \"confidence_form\">\n    </button>\n    \n</footer>\n\n",
      "scrollTop": true,
      "files": [],
      "responses": [],
      "parameters": [
        {
          "name": "",
          "value": "",
          "type": "string"
        }
      ],
      "messageHandlers": [
        {
          "title": "",
          "message": "run",
          "code": "// Таймер\nvar secondsPlaceholder = document.getElementById(\"time\");\nvar totalSeconds = 20;\n\ntimer = setInterval(setTime, 1000);\n\nfunction setTime() {\n  --totalSeconds;\n\n  // Отображение оставшегося времени в интерфейсе\n  if (totalSeconds > -1) { secondsPlaceholder.innerHTML = totalSeconds}\n\n  // Отправка формы уверенности\n  if (totalSeconds == 0) {\n    if (!document.getElementById('confidence_t').checked && !document.getElementById('confidence_f').checked) {  \n          study.state.confidence = \"NA\"\n      } else {\n          var submit_button = document.getElementById(\"submit_button\");\n          submit_button.click()\n      }\n  }\n  \n  // Подсветка формы уверенности, если в оставшиеся 5 секунд выбор не был сделан\n  if (totalSeconds < 6) {\n\n    var time_block = document.getElementById(\"time-block\");\n    time_block.classList.add(\"dark-red\");\n    var conf_block = document.getElementById(\"confidence_block\");\n    \n    if (!document.getElementById('confidence_t').checked && !document.getElementById('confidence_f').checked) {  \n          conf_block.classList.add(\"red-state\");\n    } else {conf_block.classList.remove(\"red-state\") }\n\n  }\n}\n\n\n// Данные для графика\nvar preapred_data = {\"values\": [\n      {'Сделанный выбор': 600, 'Уровень производства': 7000, 'Шаг': 0},\n      {'Сделанный выбор': 500, 'Уровень производства': 4000, 'Шаг': 1},\n      {'Сделанный выбор': 700, 'Уровень производства': 5000, 'Шаг': 2},\n      {'Сделанный выбор': 300, 'Уровень производства': 9000, 'Шаг': 3},\n      {'Сделанный выбор': 600, 'Уровень производства': 6000, 'Шаг': 4}\n    ]}\n\n// Конфигурация графика\nvar spec = {\n  $schema: 'https://vega.github.io/schema/vega-lite/v3.json',\n  data: preapred_data,\n  transform: [\n    {'calculate': '7940', \"as\": \"downline\"}, \n    {'calculate': '9980', \"as\": \"upline\"}],\n  zero_title: 2000,\n  width: 400,\n  height: 140,\n  title: {text: 'Производственный график', fontSize: 16, dy: -12},\n  layer: [\n\n   // Прямоугольник, выделяющий целевой уровень производства         \n   {mark: \"rect\",\n    encoding: {\n        \"x\":{ \"value\": 0 },\n        \"x2\":{ \"value\": 400 },\n        \"y\":{ \"field\": \"upline\" },\n        \"y2\":{ \"field\": \"downline\" } ,\n        \"fill\":{ \"value\": \"green\" },\n        \"stroke\":{ \"value\": \"green\" },\n        \"strokeWidth\":{ \"value\": 1 },\n        \"fillOpacity\":{ \"value\": 0.1 },\n        \"opacity\":{ \"value\": 0.1 },\n        \"tooltip\": \n          {\"value\": \"Цель (8.000 – 10.000)\"}}}, \n\n   // Линия, обозначающая нижнюю границу целевого уровня производства\n   {mark: \"rule\",\n    labels: false,\n    encoding: {\n        y: { \"field\": \"downline\", title: \"Уровень производства\"},\n        size: { \"value\": 1.5 },\n        tooltip: { \"value\": null },\n        color: { \"value\": \"green\" }}},\n\n   // Линия, обозначающая верхнюю границу целевого уровня производства\n   {mark: \"rule\",\n    labels: false,\n    encoding: {\n        y: { \"field\": \"upline\", title: \"Уровень производства\"},\n        size: { \"value\": 1.5 },\n        tooltip: { \"value\": null },\n        color: { \"value\": \"green\" }}},\n      \n   // График изменения уровня производства     \n   {mark: {\"type\": \"line\", \"point\": {\"size\": 60}},\n    encoding: {\n      x: {\n        field: 'Шаг', \n        type: 'quantitative', \n        scale: {domain: [0, 20]},\n        axis: {titleFontSize: 14, labelFontSize: 12, titlePadding: 12}},\n      y: {\n        field: 'Уровень производства', \n        type: 'quantitative', \n        scale: {domain: [0, 12000]},\n        axis: {\n          titleFontSize: 14, \n          labelFontSize: 12,  \n          titlePadding: 12,    \n          zindex: 0}},\n      color: {\n        condition: {\n          \"test\": \"datum['Шаг'] > 3\", \n          \"value\": \"#DC8A0E\"}, \n          \"value\": \"#315399\"},\n      tooltip: [{\n        \"field\": \"Сделанный выбор\", \n        \"type\": \"quantitative\",\n        \"title\": \"Выбор\"}]}}]\n};\n\n\n// Построение графика\nvegaEmbed('#chart', spec, {\"actions\": false}).then(function(res) {\n  res.view.change('table', changeSet).run();\n});\n\n\n// Функция, срабатывающая при достижении максимального/минимального количества рабочих\nfunction showLimit() {\n  amount_of_workers.classList.add(\"workers_amount_animation\")\n  setTimeout(function() { amount_of_workers.classList.remove(\"workers_amount_animation\") }, 600);\n}\n\n// Функция, для изменения значения поля с количеством рабочих\nfunction myFunction(plus) {\n  var amount_of_workers = document.getElementById(\"amount_of_workers\");\n  var number = parseInt(amount_of_workers.innerHTML);\n\n  if (plus === true ) {\n    if (number < 1200) {\n      number = number + 100\n    } else { \n        showLimit()\n     }} \n    \n  else {\n    if (number > 100) {\n      number = number - 100} else { \n        showLimit()\n    }}\n  \n  amount_of_workers.firstChild.nodeValue = number;\n}\n\n\n// Привязка функции к нажатию на кнопку \"+\"\nconst pl = document.getElementById(\"+\");\npl.addEventListener(\"click\", () => { myFunction(plus = true); }, false);\n\n// Привязка функции к нажатию на кнопку \"-\"\nconst ml = document.getElementById(\"-\");\nml.addEventListener(\"click\", () => { myFunction(plus = false); }, false);\n\n\n\n\n"
        },
        {
          "title": "",
          "message": "end",
          "code": "clearInterval(timer);"
        }
      ],
      "title": "[2CP] Factory interface, with partner, preliminary",
      "_tab": "Scripts",
      "timeout": "20500"
    },
    "20": {
      "id": "20",
      "type": "lab.html.Form",
      "content": "<!-- Шапка --> \n<header class=\"header-footer-style\">\n    Предварительный выбор • 5/20 шаг набора • Этап с напарником <br>\n    <div id=\"time-block\"><b>Оставшееся время:</b> <span id=\"time\"> 20 </span> секунд </div>\n</header>\n\n\n<main class=\"main-layout\">\n<!-- Элементы вывода -->\n<div class = \"horizontal-section\">\n\n\n  <!-- График (тут только часть, остальное в Scripts) --> \n  <div id = \"chart-card\" class=\"card output-color horizontal-centered\">\n    <div id = \"chart\"></div>\n  </div>\n\n\n  <!-- Уровень производства + Предварительный выбор -->\n  <div id = \"info-section-col\">\n    <!-- Уровень производства --> \n    <div id \"prod-level\" class = \"card output-color text-lefted\">\n      <div id = \"prod-level-headline\" class = \"headline\">Уровень производства</div>\n      <div class = \"fifthteen_px\"\"> \n        <span class = \"medium_weight\">Текущий уровень:</span> \n        <span class = \"dark-yellow\"> 6.000 (+2.000 до цели) </span>\n      </div>\n      <div id = \"target-level-headline\" class = \"fifthteen_px text-lefted\"> \n        <span class = \"medium_weight\"> Цель:</span> \n        8.000 – 10.000\n      </div>\n    </div>\n\n    <!-- Предварительный выбор --> \n    <div class = \"card output-color vertical-centered text-lefted\">\n      <div id=\"prem-choice-headline\" class = \"headline\">Предварительный выбор</div>\n      <div id=\"prem-response\"> 700 </div>\n    </div>\n  </div>\n</div>\n\n\n<!-- Элементы ввода --> \n<div class = \"horizontal-section\">\n  <!-- Выбор количества рабочих (тут только часть, логика изменения в Scripts) --> \n  <div class = \"card input-color vertical-centered\">\n    <p class = \"headline\">Выберите количество рабочих</p>\n    <div class = \"horizontal-centered\">\n        <button id = \"-\" class = \"work-num-element button nineteen_px\">-</button>\n        <span id=\"amount_of_workers\" class=\"work-num-element twenty-four_px\"> 600 </span>\n        <button id=\"+\" class=\"work-num-element button nineteen_px\">+</button>\n    </div>\n  </div>\n\n\n<!-- Уверенность --> \n  <div id=\"confidence_block\" class=\"card input-color vertical-lefted\">\n    <span \n      id = \"confidence-headline\" \n      class = \"headline\"> Оцените уверенность </span>\n    <div id = \"confidence-block\">\n      <form id = \"confidence_form\" class = \"fifthteen_px\"> \n        <input style = \"\n          font-size: \"24px\"\n          type = \"radio\" \n          name = \"confidence\" \n          id = \"confidence_t\"\n          value = \"1\"> Скорее уверен <br>\n        <input style = \"\n          font-size: \"24px\" \n          type = \"radio\" \n          name = \"confidence\" \n          id = \"confidence_f\"\n          value = \"0\"> Скорее не уверен\n      </form> \n    </div> \n  </div>\n</div>\n\n</main>\n\n\n<!-- Чердак --> \n<footer class=\"header-footer-style\">\n  Вы перейдёте к следующему шагу по истечению времени\n\n    <!-- Кнопка для сабмита --> \n    <button \n        id = \"submit_button\" \n        style = \"display: none\" \n        type = \"submit\" \n        form = \"confidence_form\">\n    </button>\n    \n</footer>\n\n",
      "scrollTop": true,
      "files": [],
      "responses": [],
      "parameters": [
        {
          "name": "",
          "value": "",
          "type": "string"
        }
      ],
      "messageHandlers": [
        {
          "title": "",
          "message": "run",
          "code": "// Таймер\nvar secondsPlaceholder = document.getElementById(\"time\");\nvar totalSeconds = 20;\n\ntimer = setInterval(setTime, 1000);\n\nfunction setTime() {\n  --totalSeconds;\n\n  // Отображение оставшегося времени в интерфейсе\n  if (totalSeconds > -1) { secondsPlaceholder.innerHTML = totalSeconds}\n\n  // Отправка формы уверенности\n  if (totalSeconds == 0) {\n    if (!document.getElementById('confidence_t').checked && !document.getElementById('confidence_f').checked) {  \n          study.state.confidence = \"NA\"\n      } else {\n          var submit_button = document.getElementById(\"submit_button\");\n          submit_button.click()\n      }\n  }\n  \n  \n  // Подсветка формы уверенности, если в оставшиеся 5 секунд выбор не был сделан\n  if (totalSeconds < 6) {\n\n    var time_block = document.getElementById(\"time-block\");\n    time_block.classList.add(\"dark-red\");\n    var conf_block = document.getElementById(\"confidence_block\");\n    \n    if (!document.getElementById('confidence_t').checked && !document.getElementById('confidence_f').checked) {  \n          conf_block.classList.add(\"red-state\");\n    } else {conf_block.classList.remove(\"red-state\") }\n\n  }\n}\n\n// Данные для графика\nvar preapred_data = {\"values\": [\n      {'Сделанный выбор': 600, 'Уровень производства': 7000, 'Шаг': 0},\n      {'Сделанный выбор': 500, 'Уровень производства': 4000, 'Шаг': 1},\n      {'Сделанный выбор': 700, 'Уровень производства': 5000, 'Шаг': 2},\n      {'Сделанный выбор': 300, 'Уровень производства': 9000, 'Шаг': 3},\n      {'Сделанный выбор': 600, 'Уровень производства': 6000, 'Шаг': 4}\n    ]}\n\n// Конфигурация графика\nvar spec = {\n  $schema: 'https://vega.github.io/schema/vega-lite/v3.json',\n  data: preapred_data,\n  transform: [\n    {'calculate': '7940', \"as\": \"downline\"}, \n    {'calculate': '9980', \"as\": \"upline\"}],\n  zero_title: 2000,\n  width: 400,\n  height: 140,\n  title: {text: 'Производственный график', fontSize: 16, dy: -12},\n  layer: [\n\n   // Прямоугольник, выделяющий целевой уровень производства         \n   {mark: \"rect\",\n    encoding: {\n        \"x\":{ \"value\": 0 },\n        \"x2\":{ \"value\": 400 },\n        \"y\":{ \"field\": \"upline\" },\n        \"y2\":{ \"field\": \"downline\" } ,\n        \"fill\":{ \"value\": \"green\" },\n        \"stroke\":{ \"value\": \"green\" },\n        \"strokeWidth\":{ \"value\": 1 },\n        \"fillOpacity\":{ \"value\": 0.1 },\n        \"opacity\":{ \"value\": 0.1 },\n        \"tooltip\": \n          {\"value\": \"Цель (8.000 – 10.000)\"}}}, \n\n   // Линия, обозначающая нижнюю границу целевого уровня производства\n   {mark: \"rule\",\n    labels: false,\n    encoding: {\n        y: { \"field\": \"downline\", title: \"Уровень производства\"},\n        size: { \"value\": 1.5 },\n        tooltip: { \"value\": null },\n        color: { \"value\": \"green\" }}},\n\n   // Линия, обозначающая верхнюю границу целевого уровня производства\n   {mark: \"rule\",\n    labels: false,\n    encoding: {\n        y: { \"field\": \"upline\", title: \"Уровень производства\"},\n        size: { \"value\": 1.5 },\n        tooltip: { \"value\": null },\n        color: { \"value\": \"green\" }}},\n      \n   // График изменения уровня производства     \n   {mark: {\"type\": \"line\", \"point\": {\"size\": 60}},\n    encoding: {\n      x: {\n        field: 'Шаг', \n        type: 'quantitative', \n        scale: {domain: [0, 20]},\n        axis: {titleFontSize: 14, labelFontSize: 12, titlePadding: 12}},\n      y: {\n        field: 'Уровень производства', \n        type: 'quantitative', \n        scale: {domain: [0, 12000]},\n        axis: {\n          titleFontSize: 14, \n          labelFontSize: 12,  \n          titlePadding: 12,    \n          zindex: 0}},\n      color: {\n        condition: {\n          \"test\": \"datum['Шаг'] > 3\", \n          \"value\": \"#DC8A0E\"}, \n          \"value\": \"#315399\"},\n      tooltip: [{\n        \"field\": \"Сделанный выбор\", \n        \"type\": \"quantitative\",\n        \"title\": \"Выбор\"}]}}]\n};\n\n\n// Построение графика\nvegaEmbed('#chart', spec, {\"actions\": false}).then(function(res) {\n  res.view.change('table', changeSet).run();\n});\n\n\n// Функция, срабатывающая при достижении максимального/минимального количества рабочих\nfunction showLimit() {\n  amount_of_workers.classList.add(\"workers_amount_animation\")\n  setTimeout(function() { amount_of_workers.classList.remove(\"workers_amount_animation\") }, 600);\n}\n\n// Функция, для изменения значения поля с количеством рабочих\nfunction myFunction(plus) {\n  var amount_of_workers = document.getElementById(\"amount_of_workers\");\n  var number = parseInt(amount_of_workers.innerHTML);\n\n  if (plus === true ) {\n    if (number < 1200) {\n      number = number + 100\n    } else { \n        showLimit()\n     }} \n    \n  else {\n    if (number > 100) {\n      number = number - 100} else { \n        showLimit()\n    }}\n  \n  amount_of_workers.firstChild.nodeValue = number;\n}\n\n\n// Привязка функции к нажатию на кнопку \"+\"\nconst pl = document.getElementById(\"+\");\npl.addEventListener(\"click\", () => { myFunction(plus = true); }, false);\n\n// Привязка функции к нажатию на кнопку \"-\"\nconst ml = document.getElementById(\"-\");\nml.addEventListener(\"click\", () => { myFunction(plus = false); }, false);\n\n\n\n\n"
        },
        {
          "title": "",
          "message": "end",
          "code": "clearInterval(timer);"
        }
      ],
      "title": "[2CF] Factory interface, with partner, final",
      "_tab": "Scripts",
      "timeout": "20500"
    },
    "root": {
      "id": "root",
      "title": "root",
      "type": "lab.flow.Sequence",
      "children": [
        "1",
        "9",
        "19",
        "12",
        "2",
        "10",
        "20",
        "8",
        "18"
      ],
      "parameters": [],
      "plugins": [
        {
          "type": "lab.plugins.Metadata"
        }
      ],
      "metadata": {
        "title": "Factory task [version-1.11]",
        "description": "This task is stimulus material for research in psychology. The topic: how does the format of communication (chat vs video+voice) affect epistemic trust.",
        "repository": "",
        "contributors": "Nikita Sharin (nasharin@edu.hse.ru)"
      }
    }
  },
  "version": [
    20,
    2,
    4
  ],
  "files": {
    "files": {
      "index.html": {
        "content": "data:text/html,%3C!doctype%20html%3E%0A%3Chtml%3E%0A%3Chead%3E%0A%3Cstyle%3E%0A%40import%20url('https%3A%2F%2Ffonts.googleapis.com%2Fcss2%3Ffamily%3DRoboto%3Awght%40300%3B400%3B500%3B700%26display%3Dswap')%3B%0A%3C%2Fstyle%3E%0A%3Cscript%20src%3D%22https%3A%2F%2Fcdnjs.cloudflare.com%2Fajax%2Flibs%2Fvega%2F5.7.0%2Fvega.js%22%3E%3C%2Fscript%3E%0A%3Cscript%20src%3D%22https%3A%2F%2Fcdnjs.cloudflare.com%2Fajax%2Flibs%2Fvega-lite%2F3.4.0%2Fvega-lite.js%22%3E%3C%2Fscript%3E%0A%3Cscript%20src%3D%22https%3A%2F%2Fcdnjs.cloudflare.com%2Fajax%2Flibs%2Fvega-embed%2F5.1.3%2Fvega-embed.js%22%3E%3C%2Fscript%3E%0A%20%20%3Cmeta%20charset%3D%22utf-8%22%3E%0A%20%20%3Ctitle%3EExperiment%3C%2Ftitle%3E%0A%20%20%3C!--%20viewport%20setup%20--%3E%0A%20%20%3Cmeta%20name%3D%22viewport%22%20content%3D%22width%3Ddevice-width%2C%20initial-scale%3D1%22%3E%0A%20%20%3C!--%20lab.js%20library%20and%20experiment%20code%20--%3E%0A%20%20%24%7B%20header%20%7D%0A%3C%2Fhead%3E%0A%3Cbody%3E%0A%20%20%3C!--%20If%20you'd%20rather%20have%20a%20container%20with%20a%20fixed%20width%0A%20%20%20%20%20%20%20and%20variable%20height%2C%20try%20removing%20the%20fullscreen%20class%20below%20--%3E%0A%20%20%3Cdiv%20class%3D%22container%20fullscreen%22%20data-labjs-section%3D%22main%22%3E%0A%20%20%20%20%3Cmain%20class%3D%22content-vertical-center%20content-horizontal-center%22%3E%0A%20%20%20%20%20%20%3Cdiv%3E%0A%20%20%20%20%20%20%20%20%3Ch2%3ELoading%20Experiment%3C%2Fh2%3E%0A%20%20%20%20%20%20%20%20%3Cp%3EThe%20experiment%20is%20loading%20and%20should%20start%20in%20a%20few%20seconds%3C%2Fp%3E%0A%20%20%20%20%20%20%3C%2Fdiv%3E%0A%20%20%20%20%3C%2Fmain%3E%0A%20%20%3C%2Fdiv%3E%0A%3C%2Fbody%3E%0A%3C%2Fhtml%3E%0A",
        "source": "library"
      },
      "style.css": {
        "content": "data:text/css,%2F*%20%D0%90%D0%BD%D0%B8%D0%BC%D0%B0%D1%86%D0%B8%D0%B8%20*%2F%0A%0A%2F*%20%D0%90%D0%BD%D0%B8%D0%BC%D0%B0%D1%86%D0%B8%D1%8F%20%D1%82%D0%B5%D0%BA%D1%81%D1%82%D0%BE%D0%B2%D0%BE%D0%B3%D0%BE%20%D0%BB%D0%B5%D0%B9%D0%B1%D0%BB%D0%B0%20%D1%81%20%D0%BA%D0%BE%D0%BB%D0%B8%D1%87%D0%B5%D1%81%D1%82%D0%B2%D0%BE%D0%BC%20%D1%80%D0%B0%D0%B1%D0%BE%D1%87%D0%B8%D1%85%20%D0%BF%D1%80%D0%B8%20%D0%BF%D1%80%D0%B5%D0%B2%D1%8B%D1%88%D0%B5%D0%BD%D0%B8%D0%B8%20%D0%BC%D0%B0%D0%BA%D1%81%D0%B8%D0%BC%D0%B0%D0%BB%D1%8C%D0%BD%D0%BE%D0%B3%D0%BE%2F%D0%BC%D0%B8%D0%BD%D0%B8%D0%BC%D0%B0%D0%BB%D1%8C%D0%BD%D0%BE%D0%B3%D0%BE%20%D0%BA%D0%BE%D0%BB%D0%B8%D1%87%D0%B5%D1%81%D1%82%D0%B2%D0%B0%20*%2F%0A.workers_amount_animation%20%7B%0A%20%20animation-name%3A%20color-change%3B%0A%20%20animation-duration%3A%200.6s%3B%0A%7D%0A%0A%40keyframes%20color-change%20%7B%0A%20%200%25%20%20%20%7Bcolor%3A%20black%3B%7D%0A%20%2050%25%20%20%7Bcolor%3A%20rgb(186%2C%2069%2C%2069)%3B%7D%0A%20%20100%25%20%7Bcolor%3A%20black%3B%7D%0A%7D%0A%0A%0A%2F*%20%D0%97%D0%B0%D0%B3%D1%80%D1%83%D0%B7%D1%87%D0%B8%D0%BA%20*%2F%0A%0A.loader%20%7B%0A%20%20border%3A%2012px%20solid%20%23f3f3f3%3B%20%2F*%20Light%20grey%20*%2F%0A%20%20border-top%3A%2012px%20solid%20%233498db%3B%20%2F*%20Blue%20*%2F%0A%20%20border-radius%3A%2050%25%3B%0A%20%20width%3A%2080px%3B%0A%20%20height%3A%2080px%3B%0A%20%20animation%3A%20spin%202s%20linear%20infinite%3B%0A%7D%0A%0A%40keyframes%20spin%20%7B%0A%20%200%25%20%7B%20transform%3A%20rotate(0deg)%3B%20%7D%0A%20%20100%25%20%7B%20transform%3A%20rotate(360deg)%3B%20%7D%0A%7D%0A%0A%0A%2F*%20%D0%9D%D0%B0%D1%81%D1%82%D1%80%D0%BE%D0%B9%D0%BA%D0%B0%20%D0%BA%D0%BE%D0%BD%D1%82%D1%80%D0%B5%D0%BA%D1%82%D0%BD%D1%8B%D1%85%20%D1%8D%D0%BB%D0%B5%D0%BC%D0%B5%D0%BD%D1%82%D0%BE%D0%B2%20*%2F%0A%0A%23prem-response%20%7B%0A%20%20padding-bottom%3A%208px%3B%0A%20%20font-size%3A%2047px%3B%0A%7D%0A%0A%23prem-response-dis%20%7B%0A%20%20padding-bottom%3A%203px%3B%0A%20%20font-size%3A%2045px%3B%0A%7D%0A%0A%23chart-card%20%7B%0A%20%20padding-top%3A%2015px%3B%0A%20%20padding-bottom%3A%2010px%0A%7D%0A%0A%23info-section-col%20%7B%0A%20%20height%3A%20fit-content%3B%0A%20%20width%3A%20fit-content%3B%0A%20%20flex-direction%3A%20column%3B%0A%20%20align-items%3A%20left%3B%0A%20%20display%3A%20flex%3B%0A%20%20gap%3A%2020px%3B%0A%7D%0A%0A%23info-section-row%20%7B%0A%20%20height%3A%20fit-content%3B%0A%20%20width%3A%20fit-content%3B%0A%20%20flex-direction%3A%20row%3B%0A%20%20display%3A%20flex%3B%0A%20%20gap%3A%2020px%3B%0A%7D%0A%0A%23prod-level%20%7B%0A%20%20width%3A%20fit-content%3B%0A%20%20height%3A%20fit-content%3B%0A%20%20flex-direction%3A%20row%3B%0A%20%20display%3A%20flex%3B%0A%7D%0A%0A%23discussion-block%20%7B%0A%20%20height%3A%20fit-content%3B%0A%20%20width%3A%20589px%3B%0A%7D%0A%0A%23confidence-block%20%7B%0A%20%20margin-bottom%3A%2018px%3B%0A%7D%0A%0A%2F*%20%D0%97%D0%B0%D0%B3%D0%B0%D0%BB%D0%BE%D0%B2%D0%BA%D0%B8%20*%2F%0A%0A%23prod-level-headline%20%7B%0A%20%20padding-top%3A%2016px%3B%0A%20%20padding-bottom%3A%2014px%0A%7D%0A%0A%23prod-level-headline-dis%20%7B%0A%20%20padding-top%3A%2016px%3B%0A%20%20padding-bottom%3A%2010px%0A%7D%0A%0A%23target-level-headline%20%7B%0A%20%20padding-bottom%3A%2017px%3B%20%0A%20%20padding-top%3A%205px%3B%0A%7D%0A%0A%23prem-choice-headline%20%7B%0A%20%20padding-top%3A%2016px%3B%20%0A%20%20padding-bottom%3A%2013px%0A%7D%0A%0A%23prem-choice-headline-dis%20%7B%0A%20%20padding-top%3A%2016px%3B%20%0A%20%20padding-bottom%3A%209px%0A%7D%0A%0A%23confidence-headline%20%7B%0A%20%20padding-top%3A%2016px%3B%20%0A%20%20padding-bottom%3A%208px%3B%0A%7D%0A%0A%23task-headline%20%7B%0A%20%20padding-bottom%3A%2019px%3B%20%0A%7D%0A%0A%0A%2F*%20%D0%A1%D0%B8%D1%81%D1%82%D0%B5%D0%BC%D0%BD%D1%8B%D0%B5%20%D1%8D%D0%BB%D0%B5%D0%BC%D0%B5%D0%BD%D1%82%D1%8B%20*%2F%0A%0Abody%20%7B%20font-family%3A%20'Roboto'%2C%20sans-serif%20%7D%0Aform%20%7B%20text-align%3A%20left%20%7D%0A%0A.header-footer-style%20%7B%0A%20%20background-color%3A%20%23F6F6F6%3B%20%0A%20%20font-size%3A%2016px%3B%0A%7D%0A%0A%0A%2F*%20%D0%A8%D1%80%D0%B8%D1%84%D1%82%D1%8B%20*%2F%0A%0A.headline%20%7B%0A%20%20font-size%3A%2016px%3B%0A%20%20font-weight%3A%20bold%3B%0A%7D%0A%0A.fourteen_px%20%7B%20font-size%3A%2014px%20%7D%0A.fifthteen_px%20%7B%20font-size%3A%2015px%20%7D%0A.nineteen_px%20%7B%20font-size%3A%2019px%20%7D%0A.twenty-four_px%20%7B%20font-size%3A%2024px%20%7D%0A.medium_weight%20%7B%20font-weight%3A%20500%20%7D%0A%0A%0A%2F*%20%22%D0%AD%D0%BB%D0%B5%D0%BC%D0%B5%D0%BD%D1%82%20%D0%BF%D0%B0%D0%BD%D0%B5%D0%BB%D0%B8%20%D0%B2%D1%8B%D0%B1%D0%BE%D1%80%D0%B0%20%D0%BA%D0%BE%D0%BB%D0%B8%D1%87%D0%B5%D1%81%D1%82%D0%B2%D0%B0%20%D1%80%D0%B0%D0%B1%D0%BE%D1%87%D0%B8%D1%85%22%20*%2F%0A%0A.work-num-element%20%7B%0A%20%20padding%3A%208px%3B%0A%20%20margin-top%3A%200px%3B%0A%20%20margin-right%3A%204px%3B%0A%20%20margin-bottom%3A%2020px%3B%0A%20%20margin-left%3A%204px%3B%0A%7D%0A%0A%0A%2F*%20%D0%9A%D0%BD%D0%BE%D0%BF%D0%BA%D0%B0%20*%2F%0A%0A.button%20%7B%0A%20%20background-color%3A%20rgb(255%2C%20255%2C%20255)%3B%0A%09width%3A%2047px%3B%0A%20%20border-radius%3A%2040px%3B%0A%20%20transition%3A%20.1s%20ease-in-out%200s%3B%0A%7D%0A%0A.button%3Ahover%7B%0A%20%20cursor%3A%20pointer%3B%0A%20%20transform%3A%20scale(1.1)%3B%0A%20%20background-color%3A%20%23F6F6F6%3B%0A%7D%0A%0A.button%3Adisabled%7B%0A%20%20opacity%3A%200.4%3B%0A%7D%0A%0A%2F*%20%D0%9A%D0%B0%D1%80%D1%82%D0%BE%D1%87%D0%BA%D0%B0%20*%2F%0A%0A.card%20%7B%20%20%0A%20%20padding-left%3A%2020px%3B%0A%20%20padding-right%3A%2020px%3B%0A%20%20border-style%3A%20solid%3B%0A%20%20border-color%3A%20%23E6E8EA%3B%0A%20%20border-radius%3A%2012px%3B%0A%20%20border-width%3A%201.5px%3B%0A%20transition%3A%20.1s%20ease-in-out%200s%3B%0A%7D%0A%0A.card%3Ainvalid%20%7B%20%20%0A%20%20border-color%3A%20rgb(207%2C%2083%2C%2083)%3B%0A%20%20background-color%3A%20%20rgb(239%2C%20213%2C%20213)%3B%0A%7D%0A%0A%0A%2F*%20%D0%9A%D0%BE%D0%BC%D0%BF%D0%B0%D0%BD%D0%BE%D0%B2%D0%BA%D0%B0%20*%2F%0A%0A.main-layout%20%7B%0A%20%20flex-direction%3A%20column%3B%0A%20%20display%3A%20flex%3B%0A%20%20align-items%3A%20center%3B%0A%20%20gap%3A%2020px%3B%0A%20%20justify-content%3A%20center%3B%0A%7D%0A%0A.horizontal-section%20%7B%0A%20%20width%3A%20fit-content%3B%0A%20%20height%3A%20fit-content%3B%0A%20%20flex-direction%3A%20row%3B%0A%20%20display%3A%20flex%3B%0A%20%20gap%3A%2020px%3B%0A%7D%0A%0A.horizontal-centered%20%7B%0A%20%20width%3A%20fit-content%3B%0A%20%20height%3A%20fit-content%3B%0A%20%20flex-direction%3A%20row%3B%0A%20%20display%3A%20flex%3B%0A%20%20align-items%3A%20center%3B%0A%7D%0A%0A.vertical-centered%20%7B%0A%20%20height%3A%20fit-content%3B%0A%20%20width%3A%20fit-content%3B%0A%20%20flex-direction%3A%20column%3B%0A%20%20align-items%3A%20center%3B%0A%20%20display%3A%20flex%3B%0A%7D%0A%0A.vertical-lefted%20%7B%0A%20%20height%3A%20fit-content%3B%0A%20%20width%3A%20fit-content%3B%0A%20%20flex-direction%3A%20column%3B%0A%20%20display%3A%20flex%3B%0A%7D%0A%0A%0A%2F*%20%D0%92%D1%8B%D1%80%D0%B0%D0%B2%D0%BD%D0%B8%D0%B2%D0%B0%D0%BD%D0%B8%D0%B5%20%D1%82%D0%B5%D0%BA%D1%81%D1%82%D0%B0%20*%2F%0A%0A.text-lefted%20%7B%0A%20display%3A%20block%3B%0A%20text-align%3A%20left%3B%0A%7D%0A%0A.text-centered%20%7B%0A%20display%3A%20block%3B%0A%20text-align%3A%20center%3B%0A%7D%0A%0A%0A%2F*%20%D0%A6%D0%B2%D0%B5%D1%82%D0%B0%3A%20%D1%88%D1%80%D0%B8%D1%84%D1%82%D1%8B%20*%2F%0A%0A.dark-red%20%7B%20color%3A%20firebrick%20%7D%0A.dark-yellow%20%7B%20color%3A%20%23C17F29%20%7D%0A.dark-green%20%7B%20color%3A%20rgb(60%2C%20131%2C%2039)%20%7D%0A%0A%0A%2F*%20%D0%A6%D0%B2%D0%B5%D1%82%D0%B0%3A%20%D1%84%D0%BE%D0%BD%20*%2F%0A%0A.input-color%20%7B%20background-color%3A%20%23F6F6F6%20%7D%0A.output-color%20%7B%20background-color%3A%20%23F7FAFC%20%7D%0A%0A%2F*%20%D0%A6%D0%B2%D0%B5%D1%82%D0%B0%3A%20%D0%B3%D1%80%D0%B0%D0%BD%D0%B8%D1%86%D1%8B%20*%2F%0A%0A.red-state%20%7B%0A%20%20border-color%3A%20rgb(207%2C%2083%2C%2083)%3B%0A%20%20background-color%3A%20%20rgb(243%2C%20227%2C%20227)%3B%0A%7D",
        "source": "library"
      }
    },
    "bundledFiles": {
      "lib/lab.js": {
        "type": "application/javascript"
      },
      "lib/lab.js.map": {
        "type": "text/plain"
      },
      "lib/lab.fallback.js": {
        "type": "application/javascript"
      },
      "lib/lab.legacy.js": {
        "type": "application/javascript"
      },
      "lib/lab.legacy.js.map": {
        "type": "text/plain"
      },
      "lib/lab.css": {
        "type": "text/css"
      },
      "lib/loading.svg": {
        "type": "image/svg+xml"
      }
    }
  }
}
